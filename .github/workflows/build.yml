name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  EKS_CLUSTER_NAME : "ekspro"

jobs:
  build:
    runs-on: ubuntu-latest .

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: |
          docker build -t timeoff:latest 

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry: 975050107562.dkr.ecr.us-east-1.amazonaws.com/timeoff
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Push Docker Image to Amazon ECR
        run: |
          docker tag timeoff:latest ${{ steps.login-ecr.outputs.registry }}/image:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/timeoff:latest

      - name: Configure kubeConfig
        run: |
          if [ ! -z ${{ env.EKS_CLUSTER_NAME }} ];
          then
            aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }}
          else
          mkdir -p ~/.kube
          touch ~/.kube/config
          fi

      # Apply Kubernetes manifests
      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f Deployment.yaml

